{"version":3,"file":"js/bigup-contact-form-admin.js","mappings":"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","sources":["webpack://bigup-contact-form/./src/js/_alert.js","webpack://bigup-contact-form/./src/js/_debug.js","webpack://bigup-contact-form/./src/js/_form-lock.js","webpack://bigup-contact-form/./src/js/_submit-test.js","webpack://bigup-contact-form/./src/js/_util.js","webpack://bigup-contact-form/webpack/bootstrap","webpack://bigup-contact-form/webpack/runtime/define property getters","webpack://bigup-contact-form/webpack/runtime/hasOwnProperty shorthand","webpack://bigup-contact-form/./src/js/view-admin.js"],"sourcesContent":["import { debug, stopwatch } from './_debug'\nimport { formLock } from './_form-lock'\nimport { removeChildren, makeHumanReadable } from './_util'\n\n\n/**\n * Show alerts in a form.\n * \n * @param {object} form The target form.\n * @param {array} alerts Alert objects to be displayed.\n */\nconst alertsShow = async ( form, alerts ) => {\n\n\tconst output = form.querySelector( '.bigup__alert_output' )\n\tif ( ! output ) return\n\n\t// Show.\n\tif( debug ) console.log( `${stopwatch()} |START| alertsShowWaitHide | ${alerts[ 0 ]}` )\n\tformLock( form, true )\n\toutput.style.display = 'flex'\n\tawait transition( output, 'opacity', '0' )\n\tawait removeChildren( output )\n\tawait popoutsIntoDom( output, alerts )\n\tawait transition( output, 'opacity', '1' )\n\treturn( 'alert alertsShow complete' )\n}\n\n\n/**\n * Show, wait then hide alerts in a form.\n * \n * @param {object} form The target form.\n * @param {array} alerts Alert objects to be displayed.\n * @param {int} wait Time to wait.\n */\nconst alertsShowWaitHide = async ( form, alerts, wait ) => {\n\n\tconst output = form.querySelector( '.bigup__alert_output' )\n\tif ( ! output ) return\n\n\t// Show.\n\tif( debug ) console.log( `${stopwatch()} |START| alertsShowWaitHide | ${alerts[ 0 ]}` )\n\tformLock( form, true )\n\toutput.style.display = 'flex'\n\tawait transition( output, 'opacity', '0' )\n\tawait removeChildren( output )\n\tawait popoutsIntoDom( output, alerts )\n\tawait transition( output, 'opacity', '1' )\n\t// Wait.\n\tawait pause( wait )\n\t// Hide.\n\tawait transition( output, 'opacity', '0' )\n\tawait removeChildren( output )\n\toutput.style.display = 'none'\n\tformLock( form, false )\n\tif( debug ) console.log( `${stopwatch()} | END | alertsShowWaitHide | ${alerts[ 0 ]}` )\n\treturn( 'alert alertsShowWaitHide complete' )\n}\n\n\n/**\n * Pause with promise.\n * \n * @param {integer} milliseconds Duration to pause.\n * \n */\nfunction pause( milliseconds ) { \n\treturn new Promise( ( resolve ) => { \n\t\tsetTimeout( () => {\n\t\t\tresolve( 'Pause completed successfully.' )\n\t\t}, milliseconds )\n\t} )\n}\n\n\n/**\n * Check if passed variable is iterable.\n * \n */\nfunction isIterable( object ) {\n\t// Check for null and undefined.\n\tif ( object === null || object === undefined ) {\n\t\treturn false\n\t}\n\treturn typeof object[ Symbol.iterator ] === 'function'\n}\n\n\n\n/**\n * Create an array of popout message elements and insert into dom.\n * \n * @param {object} parentElement The parent node to append to.\n * @param {array}  alerts An array of alerts as objects.\n * \n */\nfunction popoutsIntoDom( output, alerts ) {\n\n\tconst classBlock  = 'bigup__alert',\n\t\tclassModifier = {\n\t\t'danger': '-danger',\n\t\t'success': '-success',\n\t\t'info': '-info',\n\t\t'warning': '-warning'\n\t}\n\n\tif( debug ) console.log( `${stopwatch()} |START| popoutsIntoDom | ${alerts[ 0 ]}` )\n\treturn new Promise( ( resolve, reject ) => {\n\t\ttry {\n\t\t\tif ( ! output || output.nodeType !== Node.ELEMENT_NODE ) {\n\t\t\t\tthrow new TypeError( `output must be an element node.` )\n\t\t\t} else if ( ! isIterable( alerts ) ) {\n\t\t\t\tthrow new TypeError( `'alerts' must be non-string iterable. ${typeof alerts} found.` )\n\t\t\t}\n\t\t\tlet popouts = []\n\t\t\talerts.forEach( ( alert ) => {\n\t\t\t\tlet p = document.createElement( 'p' )\n\t\t\t\tp.innerText = makeHumanReadable( alert.text )\n\t\t\t\tconst classNames = [ classBlock, classBlock + classModifier[ alert.type ] ]\n\t\t\t\tclassNames.forEach( ( className ) => p.classList.add( className ) )\n\t\t\t\toutput.appendChild( p )\n\t\t\t\tpopouts.push( p )\n\t\t\t} )\n\t\t\tresolve( popouts )\n\t\t} catch ( error ) {\n\t\t\treject( error )\n\t\t} finally {\n\t\t\tif( debug ) console.log( `${stopwatch()} | END | popoutsIntoDom | ${alerts[ 0 ]}` )\n\t\t}\n\t} )\n}\n\n\n/**\n * Transition a single element node with a callback on completion.\n *\n * No animation is performed here, this function expects a transition\n * duration to be set in CSS, otherwise the promise will not resolve as\n * no 'transitionend' event will be fired.\n * \n * Built in event listener was failing due to browser not initialising the\n * new dom node in time for the new event listener. This problem wouldn't\n * exist if the nodes weren't being created/removed on the fly.\n * \n * @param {object} node Element bound using bind() by caller.\n * @param {string} property The css property to transition.\n * @param {string} value The css value to transition to.\n * @return {Promise} A promise that resolves when the transition is complete.\n * \n */\nfunction transitionToResolve( property, value ) {\n\n\treturn new Promise( ( resolve, reject ) => {\n\t\ttry {\n\t\t\tif( debug ) console.log( `${stopwatch()} |START| transition | ${this.classList} : ${property} : ${value}` )\n\t\t\tthis.style[ property ] = value\n\n\t\t\t// Custom event listener to resolve the promise.\n\t\t\tlet transitionComplete = setInterval( () => {\n\t\t\t\tlet style = getComputedStyle( this )\n\t\t\t\tif ( style.opacity === value ) {\n\t\t\t\t\tclearInterval( transitionComplete )\n\t\t\t\t\tif( debug ) console.log( `${stopwatch()} | END | transition | ${this.classList} : ${property} : ${value}` )\n\t\t\t\t\tresolve( 'Transition complete.' )\n\t\t\t\t}\n\t\t\t}, 10 )\n\t\t} catch ( error ) {\n\t\t\treject( error )\n\t\t}\n\t} )\n}\n\n\n/**\n * Transition node(s) in parallel with resolved promise on completion.\n * Accepts a single node or an array of nodes to provide a common interface\n * for all element transitions.\n * \n * Expects a transition duration to be set in CSS.\n * \n * @param {array}  elements An array of elements.\n * @param {string} property The css property to transition.\n * @param {string} value The css value to transition to.\n * @return {Promise} A promise that resolves when all transitions are complete.\n * \n */\nasync function transition( elements, property, value ) {\n\n\tif ( ! isIterable( elements ) ) elements = [ elements ]\n\tif ( isIterable( elements )\n\t\t&& elements.every( ( element ) => { return element.nodeType === 1 } ) ) {\n\t\t// we have an array of element nodes.\n\t\tconst promises = elements.map( ( node ) => transitionToResolve.bind( node )( property, value ) )\n\t\tlet result = await Promise.all( promises )\n\t\treturn result\n\n\t} else {\n\t\tthrow new TypeError( 'elements must be a non-string iterable. ' + typeof elements + ' found.' )\n\t}\n}\n\n\nexport { alertsShowWaitHide, alertsShow }\n","/**\n * Set 'debug = true' and output will be sent to the console.\n */\nlet debug = false\n\n/**\n * Holds the start time of the script.\n */\nlet startTime = ''\n\n/**\n * Set the start time of the script.\n */\nconst start = () => startTime = Date.now()\n\n/**\n * Get timestamps.\n * \n * @return milliseconds since function call.\n */\nconst stopwatch = () => {\n\tlet elapsed = Date.now() - startTime\n\treturn elapsed.toString().padStart( 5, '0' )\n}\n\n\nexport { debug, start, stopwatch }\n","import { debug, stopwatch } from './_debug'\n\n/**\n * Lock/unlock a form from user input.\n * \n * @param {object} form The target form.\n * @param {bool} shouldLock Whether the form should be locked.\n */\nfunction formLock( form, shouldLock ) {\n\tconst inputs      = form.querySelectorAll( ':is( input, textarea )' ),\n\t\tbutton        = form.querySelector( '.bigup__form_submit' )\n\n\tif ( shouldLock ) {\n\t\tif( debug ) console.log( `${stopwatch()} |START| formLock | Locked` )\n\t\tform.classList.add( 'bigup__form-locked' )\n\t\tinputs.forEach( input => { input.disabled = true } )\n\t\tbutton.disabled = true\n\n\t} else {\n\t\tform.classList.remove( 'bigup__form-locked' )\n\t\tinputs.forEach( input => { input.disabled = false } )\n\t\tbutton.disabled = false\n\t\tif( debug ) console.log( `${stopwatch()} | END | formLock | Unlocked` )\n\t}\n}\n\nexport { formLock }\n","import { debug, start, stopwatch } from './_debug'\nimport { disallowedTypes } from './_file-upload'\nimport { removeChildren, makeHumanReadable } from './_util'\nimport { alertsShowWaitHide, alertsShow } from './_alert'\n\n\n/**\n * Perform a test submission in the admin area.\n */\n\n\n/**\n * Grab WP localize vars.\n * \n * wp_localize_bigup_contact_form_vars.rest_url\n * wp_localize_bigup_contact_form_vars.rest_nonce\n * \n */\nconst wpLocalized = wp_localize_bigup_contact_form_admin\n\n\n/**\n * Handle the submitted form.\n * \n * Perform a test email send and display user feedback as popout alerts.\n * \n * @param {SubmitEvent} event\n * \n */\nasync function submitTest( event ) {\n\n\tevent.preventDefault()\n\tif( debug ) start()\n\tif( debug ) console.log( 'Time | Start/Finish | Function | Target' )\n\tif( debug ) console.log( stopwatch() + ' |START| handleSubmit' )\n\n\tconst form = event.currentTarget.closest( 'form' )\n\n\tconst formData   = new FormData()\n\tconst textInputs = form.querySelectorAll( ':is( input, textarea )' )\n\n\ttextInputs.forEach( input => {\n\t\tformData.append( input.name, input.value )\n\t} )\n\n\t// Fetch params.\n\tconst url = wpLocalized.rest_url\n\tconst fetchOptions = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"X-WP-Nonce\"    : wpLocalized.rest_nonce,\n\t\t\t\"Accept\"        : \"application/json\"\n\t\t},\n\t\tbody: formData,\n\t}\n\n\n\ttry {\n\n\t\t// Display pre-fetch alerts in parrallel with fetch.\n\t\tconst preFetchAlerts = [ { 'text': 'Connecting...', 'type': 'info' } ]\n\t\tlet [ result, ] = await Promise.all( [\n\t\t\tfetchHttpRequest( url, fetchOptions ),\n\t\t\talertsShow( form, preFetchAlerts )\n\t\t] )\n\n\t\t// Display post-fetch alerts.\n\t\tconst postFetchAlerts = []\n\t\tresult.output.forEach( message => postFetchAlerts.push( { 'text': message, 'type': ( result.ok ) ? 'success' : 'danger' } ) )\n\t\talertsShowWaitHide( form, postFetchAlerts, 5000 )\n\n\t\t// Clean up form if email was sent.\n\t\tif ( result.ok ) {\n\t\t\tlet inputs = form.querySelectorAll( '.bigup__form_input' )\n\t\t\tinputs.forEach( input => { input.value = '' } )\n\t\t\tconst fileList = form.querySelector( '.bigup__customFileUpload_output' )\n\t\t\tif ( fileList ) removeChildren( fileList )\n\t\t}\n\n\t} catch ( error ) {\n\t\tconsole.error( error )\n\t} finally {\n\t\tif( debug ) console.log( stopwatch() + ' | END | handleSubmit' )\n\t}\n\n}\n\n\n/**\n * Perform a Fetch request with timeout and json response.\n * \n * Timeouts:\n *     6s for webserver to SMTP server.\n *     8s for SMTP send response to webserver.\n *     14s for front end as fallback in lieu of server response.\n * \n * controller - abort controller to abort fetch request.\n * abort - abort wrapped in a timer.\n * signal: controller.signal - attach timeout to fetch request.\n * clearTimeout( timeoutId ) - cancel the timer on response.\n * \n * @param {string} url      The WP plugin REST endpoint url.\n * @param {object} options  An object of fetch API options.\n * @return {object}         An object of message strings and ok flag.\n * \n */\nasync function fetchHttpRequest( url, options ) {\n\n\ttry {\n\t\tif( debug ) console.log( `${stopwatch()} |START| Fetch request` )\n\t\tconst controller = new AbortController()\n\t\tconst abort = setTimeout( () => controller.abort(), 14000 )\n\t\n\t\tconst response = await fetch( url, { ...options, signal: controller.signal } )\n\t\tclearTimeout( abort )\n\t\tconst result = await response.json()\n\t\tresult.ok = response.ok\n\t\tif ( typeof result.output === 'string' ) result.output = [ result.output ]\n\t\tif ( ! result.ok ) throw result\n\t\treturn result\n\n\t} catch ( error ) {\n\t\t\n\t\tif ( ! error.output ) {\n\t\t\t// error is not a server response, so display a generic error.\n\t\t\terror.output = [ 'Failed to establish a connection to the server.' ]\n\t\t\terror.ok = false\n\t\t\tconsole.error( error )\n\t\t}\n\t\tfor ( const message in error.output ) {\n\t\t\tconsole.error( makeHumanReadable( error.output[ message ] ) )\n\t\t}\n\t\treturn error\n\n\t} finally {\n\t\tif( debug ) console.log( `${stopwatch()} | END | Fetch request` )\n\t}\n}\n\n\nexport { submitTest, wpLocalized }\n","import { debug, stopwatch } from './_debug'\n\n\n/**\n * Remove all child nodes from a dom node.\n * \n * @param {object} parent The dom node to remove all child nodes from.\n * \n */\nfunction removeChildren( parent ) {\n\n\tif( debug ) console.log( `${stopwatch()} |START| removeChildren | ${parent.classList}` )\n\treturn new Promise( ( resolve, reject ) => {\n\t\ttry {\n\t\t\twhile ( parent.firstChild ) {\n\t\t\t\tparent.removeChild( parent.firstChild )\n\t\t\t}\n\t\t\tresolve( 'Child nodes removed successfully.' )\n\t\t} catch ( error ) {\n\t\t\treject( error )\n\t\t} finally {\n\t\t\tif( debug ) console.log( `${stopwatch()} | END | removeChildren | ${parent.classList}` )\n\t\t}\n\t} )\n}\n\n\n/**\n * Clean strings for human output.\n * \n * This function uses regex patterns to clean strings in 3 stages:\n * \n * 1) Remove all html tags not inside brackets ()\n *      (?<!\\([^)]*?) - do not match if preceeded by a '('\n *      <[^>]*?> - match all <>\n * 2) Remove anything that is not:\n *      (\\([^\\)]*?\\)) - content enclosed in ()\n *      ' '   - spaces\n *      \\p{L} - letters\n *      \\p{N} - numbers\n *      \\p{M} - marks (accents etc)\n *      \\p{P} - punctuation\n * 3) Trim and replace multiple spaces with a single space.\n * \n * @link https://www.regular-expressions.info/unicode.html#category\n * @param {string} string The dirty string.\n * @returns The cleaned string.\n * \n */\nfunction makeHumanReadable( string ) {\n\tif ( typeof string !== 'string' ) {\n\t\tconsole.error( `makeHumanReadable expects a string, but ${typeof string} received.`, string )\n\t\treturn 'error getting message'\n\t}\n\tconst tags = /(?<!\\([^)]*?)<[^>]*?>/g\n\tconst humanReadable = /(\\([^\\)]*?\\))|[ \\p{L}\\p{N}\\p{M}\\p{P}]/ug\n\tconst badWhitespaces = /^\\s*|\\s(?=\\s)|\\s*$/g\n\tlet notags = string.replace( tags, '' )\n\tlet notagsHuman = notags.match( humanReadable ).join( '' )\n\tlet notagsHumanClean = notagsHuman.replace( badWhitespaces, '' )\n\treturn notagsHumanClean\n}\n\n\nexport { removeChildren, makeHumanReadable }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { submitTest, wpLocalized } from './_submit-test'\nimport { formLock } from './_form-lock'\n\n/**\n * Admin client view.\n */\n\n\n/**\n * Prepare the admin SMTP test button.\n * \n */\nfunction init() {\n\n\tconst button = document.querySelector( '.bigup__smtpTest_button' )\n\tconst form   = button.closest( 'form' )\n\n\tif ( ! button ) return\n\n\t/*\n\t * Will need to change submit function to handle submit from button, otherwise backend form will have mutiple handlers.\n\t */\n\tbutton.addEventListener( 'click', submitTest )\n\n\t// Enable the submit button now js is ready (disabled by default).\n\tif ( wpLocalized.settings_ok ) {\n\t\tformLock( form, false ) \n\t}\n}\n\n\n// Initialise view on 'doc ready'.\nlet docReady = setInterval( () => {\n\tif ( document.readyState === 'complete' ) {\n\t\tclearInterval( docReady )\n\t\tinit()\n\t}\n}, 250 )\n"],"names":["alertsShow","async","form","alerts","output","querySelector","debug","console","log","stopwatch","formLock","style","display","transition","removeChildren","popoutsIntoDom","alertsShowWaitHide","wait","milliseconds","Promise","resolve","setTimeout","isIterable","object","Symbol","iterator","classBlock","classModifier","reject","nodeType","Node","ELEMENT_NODE","TypeError","popouts","forEach","alert","p","document","createElement","innerText","makeHumanReadable","text","type","className","classList","add","appendChild","push","error","transitionToResolve","property","value","this","transitionComplete","setInterval","getComputedStyle","opacity","clearInterval","elements","every","element","promises","map","node","bind","all","startTime","start","Date","now","toString","padStart","shouldLock","inputs","querySelectorAll","button","input","disabled","remove","wpLocalized","wp_localize_bigup_contact_form_admin","submitTest","event","preventDefault","currentTarget","closest","formData","FormData","append","name","url","rest_url","fetchOptions","method","headers","rest_nonce","body","preFetchAlerts","result","fetchHttpRequest","postFetchAlerts","message","ok","fileList","options","controller","AbortController","abort","response","fetch","signal","clearTimeout","json","parent","firstChild","removeChild","string","replace","match","join","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","docReady","readyState","addEventListener","settings_ok","init"],"sourceRoot":""}